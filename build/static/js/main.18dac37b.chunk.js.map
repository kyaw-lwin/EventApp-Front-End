{"version":3,"sources":["Add.js","Dashboard.js","apiClient.js","Login.js","App.js","serviceWorker.js","index.js"],"names":["Add","props","useState","disabled","cDisabled","currentEvent","onSubmit","e","preventDefault","client","updateEvent","_id","target","eName","value","eLocation","eDetails","eDate","price","addEvent","then","document","getElementById","reset","refreshList","catch","alert","submitHandler","id","type","defaultValue","eventName","name","eventLocation","eventDetails","eventDate","className","Dashboard","events","cEvents","undefined","current","cCurrent","getEvents","response","data","useEffect","Container","map","key","onClick","removeEvent","url","ApiClient","token","logoutHandler","this","method","axios","headers","authorization","error","console","log","status","Promise","reject","userName","password","apiCall","authenticatedCall","Login","login","username","loggedIn","App","window","localStorage","getItem","changeToken","removeItem","newToken","setItem","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.18dac37b.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nfunction Add(props) {\r\n  const [disabled, cDisabled] = useState(false);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    cDisabled(true);\r\n    let result;\r\n    if (props.currentEvent) {\r\n      result = props.client.updateEvent(\r\n        props.currentEvent._id,\r\n        e.target.eName.value,\r\n        e.target.eLocation.value,\r\n        e.target.eDetails.value,\r\n        e.target.eDate.value,\r\n        e.target.price.value\r\n      );\r\n    } else {\r\n      result = props.client.addEvent(\r\n        e.target.eName.value, \r\n        e.target.eLocation.value,\r\n        e.target.eDetails.value, \r\n        e.target.eDate.value, \r\n        e.target.price.value);\r\n    }\r\n    result\r\n      .then(() => {\r\n        cDisabled(false);\r\n        document.getElementById(\"addForm\").reset();\r\n        props.refreshList();\r\n      })\r\n      .catch(() => {\r\n        alert(\"error occured -incorrect input format, please try again\");\r\n        cDisabled(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {props.currentEvent ? \"Update\" : \"\"}\r\n      <br />\r\n\r\n      <form onSubmit={(e) => submitHandler(e)} id=\"addForm\">\r\n        Event Name: <br />\r\n        <input\r\n          type=\"text\"\r\n          defaultValue={props.currentEvent?.eventName}\r\n          name=\"eName\"\r\n          disabled={disabled}\r\n        />       \r\n        <br />\r\n        Event Location: <br />\r\n        <input\r\n          type=\"text\"\r\n          defaultValue={props.currentEvent?.eventLocation}\r\n          name=\"eLocation\"\r\n          disabled={disabled}\r\n        />       \r\n        <br />\r\n        Event Details: <br />\r\n        <input\r\n          type=\"text\"\r\n          defaultValue={props.currentEvent?.eventDetails}\r\n          name=\"eDetails\"\r\n          disabled={disabled}\r\n        />\r\n        <br />  \r\n        Event Date: DD/MM/YYY <br />        \r\n        <input\r\n          type=\"text\"\r\n          defaultValue={props.currentEvent?.eventDate}\r\n          name=\"eDate\"\r\n          disabled={disabled}\r\n        />     \r\n         <br />\r\n        Price:\r\n        <br />\r\n        <input\r\n          type=\"text\"\r\n          defaultValue={props.currentEvent?.price}\r\n          name=\"price\"\r\n          disabled={disabled}\r\n        />\r\n        <br />\r\n        <br />\r\n        <div className = \"add-submitButton\">\r\n          <button className = \"login-submit\" type=\"submit\" disabled={disabled}>\r\n            {\" \"}\r\n            Submit{\" \"}\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Add;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Add from \"./Add\";\r\nimport './App.css';\r\nimport Container from 'react-bootstrap/Container';\r\n\r\n\r\nfunction Dashboard(props) {\r\n  const [events, cEvents] = useState([]);\r\n  const [current, cCurrent] = useState(undefined);\r\n\r\n  const refreshList = () => {\r\n    props.client.getEvents().then((response) => cEvents(response.data));\r\n  };\r\n\r\n  const removeEvent = (id) => {\r\n    props.client.removeEvent(id).then(() => refreshList());\r\n  };\r\n\r\n  const updateEvent = (event) => {\r\n    cCurrent(event);\r\n  };\r\n\r\n  useEffect(() => {\r\n    refreshList();\r\n  }, []);\r\n\r\n  const buildrows = () => {\r\n    return events.map((current) => {\r\n      return (\r\n        <tr key={current._id}>\r\n          <td>{current.eventName}</td>        \r\n          <td>{current.eventLocation}</td>\r\n          <td>{current.eventDetails}</td>\r\n          <td>{current.eventDate}</td>\r\n          <td>Â£{current.price}</td>\r\n          <td>\r\n          <div className = \"add-submit\">\r\n            <button  className = \"login-submit2\"  onClick={() => removeEvent(current._id)}> remove</button>\r\n            <button  className = \"login-submit2\"  onClick={() => updateEvent(current)}> update</button>\r\n          </div>\r\n          </td>\r\n        </tr>\r\n      \r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n{/* /********************************************************************************************************************************/}\r\n    \r\n<Container className = \"mainPage  \">\r\n      <br />\r\n      <div className=\"mainpage-header  col-md-12\">\r\n        Events\r\n      </div>\r\n{/* /********************************************************************************************************************************/}      \r\n      <br />\r\n      <br />\r\n      <div className=\"update-event col-md-12\">\r\n{/* /********************************************************************************************************************************/}  \r\n        <div  className= \"addForm col-md-6\">\r\n        <Add\r\n          client={props.client}\r\n          refreshList={() => {\r\n            refreshList();\r\n            cCurrent(undefined);\r\n          }}\r\n          currentEvent={current}\r\n        />\r\n      </div>\r\n{/* /********************************************************************************************************************************/}      \r\n      <br />\r\n      <div className = \"event-list col-md-6\">\r\n        <br />\r\n          <table>\r\n            <thead  className = \"titles\">\r\n                <tr>\r\n                    <th>Event Name</th>\r\n                    <th>Event Location</th>    \r\n                    <th>Event Details</th>      \r\n                    <th>Event Date</th>    \r\n                    <th>Price</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>{buildrows()}</tbody>\r\n          </table>       \r\n      </div>\r\n\r\n{/* /********************************************************************************************************************************/}      \r\n      </div>\r\n{/* /********************************************************************************************************************************/}      \r\n    </Container>\r\n      \r\n{/* /**********************************************************************************************************************/}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n\r\n\r\n","import axios from \"axios\";\r\nconst url = \"https://eventappproject.herokuapp.com\";\r\n\r\nexport class ApiClient {\r\n\r\n  constructor(token, logoutHandler) {\r\n    this.token = token;\r\n    this.logoutHandler = logoutHandler;\r\n  }\r\n\r\n  \r\n  authenticatedCall(method, url, data) {\r\n    return axios({\r\n      method,\r\n      url,\r\n      headers: {\r\n        authorization: this.token\r\n      },\r\n      data,\r\n    }).catch((error) => {\r\n      console.log(\"api error\" , this.token);\r\n      if(error.response.status == 403) {\r\n        //logout the user\r\n        this.logoutHandler();\r\n        return Promise.reject();\r\n      } else {\r\n        throw error;\r\n      }      \r\n    });\r\n  }\r\n\r\n  apiCall(method, url, data) {\r\n    return axios({\r\n      method,\r\n      url,\r\n      data,\r\n    }).catch((error) => {\r\n      throw error;\r\n    });\r\n  }\r\n\r\n  login(userName,password) {\r\n    console.log(userName, password);\r\n    return this.apiCall(\"post\", `${url}auth`, {userName: userName, password: password});\r\n   \r\n  }\r\n\r\n  getEvents() {\r\n    console.log(this.token);\r\n    return this.authenticatedCall(\"get\", url);\r\n  }\r\n\r\n  addEvent(eventName, eventLocation, eventDetails, eventDate, price) {\r\n    return this.authenticatedCall(\"post\", url, { eventName, eventLocation, eventDetails, eventDate, price });\r\n  }\r\n\r\n  removeEvent(id) {\r\n    return this.authenticatedCall(\"delete\", `${url}${id}`);\r\n  }\r\n\r\n  updateEvent(id, eventName, eventLocation, eventDetails, eventDate, price) {\r\n    return this.authenticatedCall(\"put\", `${url}${id}`, { eventName, eventLocation, eventDetails, eventDate, price });\r\n  }\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nfunction Login(props) {\r\n  // super(props);\r\n  const [disabled, cDisabled] = useState(false);\r\n\r\n  const submitHandler = (e) => {\r\n    console.log(\"submit\");\r\n    e.preventDefault();\r\n    cDisabled(true);\r\n    props.client\r\n    .login(e.target.username.value, e.target.password.value)\r\n    .then( (response) => {\r\n      cDisabled(false);\r\n      props.loggedIn(response.data.token);\r\n    })\r\n    .catch ( (error) => {\r\n      alert(\"An eeror has occured, pleae try again later\");\r\n      console.log(\"Login error\", error);\r\n      cDisabled(false);\r\n    })\r\n  };\r\n\r\n  return (\r\n    \r\n    <>\r\n    <div className=\"loginarea\">\r\n      <br /><br /><br /><br /><br /><br />\r\n      <div className=\"loginpage-header\">\r\n        Event Search\r\n      </div>\r\n        <br />\r\n        <br />\r\n      <div className=\"loginheader\">\r\n        Login\r\n      </div>\r\n      <br />\r\n      <div className=\"logininput\">\r\n        <form onSubmit={(e) => submitHandler(e)}>\r\n          Username\r\n          <br />\r\n          <input type=\"text\" name=\"username\" disabled={disabled} />\r\n          <br />\r\n          Password\r\n          <br />\r\n          <input type=\"password\" name=\"password\" disabled={disabled} />\r\n          <br />\r\n          <br />\r\n          <div className = \"login-submitButton\">\r\n          <button className=\"login-submit\" type=\"submit\" disabled={disabled}>\r\n            {\" \"}\r\n            Submit\r\n            {\" \"}\r\n          </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React , {useState} from \"react\";\r\nimport Dashboard from \"./Dashboard\";\r\nimport { ApiClient } from \"./apiClient\";\r\nimport Login from \"./Login\";\r\n\r\nfunction App() {\r\n\r\n  const [token,changeToken] = useState(window.localStorage.getItem(\"token\"));\r\n\r\n  const login = (newToken) => {\r\n    window.localStorage.setItem(\"token\",newToken)\r\n    changeToken(newToken);\r\n  }\r\n\r\n  const logout = () => {\r\n    window.localStorage.removeItem(\"token\")\r\n    changeToken(undefined);\r\n  }\r\n  const client = new ApiClient(token, logout);\r\n\r\n  return (\r\n    <>\r\n      { token ? ( \r\n        <Dashboard client={client} />\r\n      ): (\r\n        <Login loggedIn={login} client={client} />\r\n         )\r\n      }  \r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}